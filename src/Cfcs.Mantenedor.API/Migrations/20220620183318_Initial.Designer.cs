// <auto-generated />
using System;
using Cfcs.Mantenedor.API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Cfcs.Mantenedor.API.Migrations
{
    [DbContext(typeof(MantenedorContext))]
    [Migration("20220620183318_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Ciudad", b =>
                {
                    b.Property<short>("RegionCodigo")
                        .HasColumnType("smallint");

                    b.Property<short>("Codigo")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("RegionCodigo", "Codigo");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Comuna", b =>
                {
                    b.Property<short>("RegionCodigo")
                        .HasColumnType("smallint");

                    b.Property<short>("CiudadCodigo")
                        .HasColumnType("smallint");

                    b.Property<short>("Codigo")
                        .HasColumnType("smallint");

                    b.Property<int>("CodigoLibroClaseElectronico")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("RegionCodigo", "CiudadCodigo", "Codigo");

                    b.ToTable("Comuna");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Persona", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("character varying(25)");

                    b.Property<short?>("CiudadCodigo")
                        .HasColumnType("smallint");

                    b.Property<short?>("ComunaCodigo")
                        .HasColumnType("smallint");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasMaxLength(95)
                        .IsUnicode(false)
                        .HasColumnType("character varying(95)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.Property<short?>("RegionCodigo")
                        .HasColumnType("smallint");

                    b.Property<string>("Run")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("RunCuerpo")
                        .HasColumnType("integer");

                    b.Property<string>("RunDigito")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .IsFixedLength(true);

                    b.Property<short>("SexoCodigo")
                        .HasColumnType("smallint");

                    b.Property<int?>("Telefono")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SexoCodigo");

                    b.HasIndex("RegionCodigo", "CiudadCodigo", "ComunaCodigo");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Region", b =>
                {
                    b.Property<short>("Codigo")
                        .HasColumnType("smallint");

                    b.Property<int>("CodigoLibroClaseElectronico")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NombreOficial")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Codigo");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Sexo", b =>
                {
                    b.Property<short>("Codigo")
                        .HasColumnType("smallint");

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .IsFixedLength(true);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Codigo");

                    b.ToTable("Sexo");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Ciudad", b =>
                {
                    b.HasOne("Cfcs.Mantenedor.API.Model.Region", "RegionCodigoNavigation")
                        .WithMany("Ciudads")
                        .HasForeignKey("RegionCodigo")
                        .HasConstraintName("FK_Ciudad_Region")
                        .IsRequired();

                    b.Navigation("RegionCodigoNavigation");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Comuna", b =>
                {
                    b.HasOne("Cfcs.Mantenedor.API.Model.Ciudad", "Ciudad")
                        .WithMany("Comunas")
                        .HasForeignKey("RegionCodigo", "CiudadCodigo")
                        .HasConstraintName("FK_Comuna_Ciudad")
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Persona", b =>
                {
                    b.HasOne("Cfcs.Mantenedor.API.Model.Sexo", "SexoCodigoNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("SexoCodigo")
                        .HasConstraintName("FK_Persona_Sexo")
                        .IsRequired();

                    b.HasOne("Cfcs.Mantenedor.API.Model.Comuna", "Comuna")
                        .WithMany("Personas")
                        .HasForeignKey("RegionCodigo", "CiudadCodigo", "ComunaCodigo")
                        .HasConstraintName("FK_Persona_Comuna");

                    b.Navigation("Comuna");

                    b.Navigation("SexoCodigoNavigation");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Ciudad", b =>
                {
                    b.Navigation("Comunas");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Comuna", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Region", b =>
                {
                    b.Navigation("Ciudads");
                });

            modelBuilder.Entity("Cfcs.Mantenedor.API.Model.Sexo", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
